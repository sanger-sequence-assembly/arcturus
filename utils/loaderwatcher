#!/usr/local/bin/perl
#
# readscheck
#
# This script extracts one or more reads and generates a CAF file

use DBI;
use DataSource;

$verbose = 0;
$interval = 5;
$scale = 100;

while ($nextword = shift @ARGV) {
    $instance = shift @ARGV if ($nextword eq '-instance');
    $organism = shift @ARGV if ($nextword eq '-organism');

    $interval = shift @ARGV if ($nextword eq '-interval');

    $scale = shift @ARGV if ($nextword eq '-scale');

    $stopafter = shift @ARGV if ($nextword eq '-stopafter');

    if ($nextword eq '-help') {
	&showUsage();
	exit(0);
    }
}

unless (defined($organism)) {
    print STDERR "One or more mandatory parameters are missing.\n\n";
    &showUsage();
    exit(1);
}

$instance = 'prod' unless defined($instance);

$ds = new DataSource(-instance => $instance, -organism => $organism);

$dbh = $ds->getConnection();

if (defined($dbh)) {
    if ($verbose) {
	print STDERR "Connected to DataSource(instance=$instance, organism=$organism)\n";
	print STDERR "DataSource URL is ", $ds->getURL(), "\n";
    }
} else {
    print STDERR "Failed to connect to DataSource(instance=$instance, organism=$organism)\n";
    print STDERR "DataSource URL is ", $ds->getURL(), "\n";
    print STDERR "DBI error is $DBI::errstr\n";
    die "getConnection failed";
}

$query = "select date_format(now(),'%H:%i:%s'),count(*) from READS";

$sth = $dbh->prepare($query);

$sth->execute();
($now, $oldcount) = $sth->fetchrow_array();

while (!defined($stopafter) || ($oldcount < $stopafter)) {
    sleep($interval);

    $sth->execute();
    ($now, $count) = $sth->fetchrow_array();

    $diff = $count - $oldcount;

    $stars = $diff/$scale;

    $str = '';

    for ($i = 0; $i < $stars; $i++) {
	$str .= '*';
    }

    printf STDERR "%8s %s %d\n", $now, $str, $diff;

    $oldcount = $count;
}

$sth->finish();
$dbh->disconnect();

exit(0);

sub showUsage {
    print STDERR "MANDATORY PARAMETERS:\n";
    print STDERR "    -organism\t\tName of organism\n";
    print STDERR "\n";
    print STDERR "OPTIONAL PARAMETERS:\n";
    print STDERR "    -instance\t\tName of instance [default: prod]\n";
    print STDERR "    -interval\t\tInterval between updates\n";
    print STDERR "    -scale\t\tReads per asterisk\n";
}
