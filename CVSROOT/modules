# Three different line formats are valid:
#	key	-a    aliases...
#	key [options] directory
#	key [options] directory files...
#
# Where "options" are composed of:
#	-i prog		Run "prog" on "cvs commit" from top-level of module.
#	-o prog		Run "prog" on "cvs checkout" of module.
#	-e prog		Run "prog" on "cvs export" of module.
#	-t prog		Run "prog" on "cvs rtag" of module.
#	-u prog		Run "prog" on "cvs update" of module.
#	-d dir		Place module in directory "dir" instead of module name.
#	-l		Top-level directory only -- do not recurse.
#
# NOTE:  If you change any of the "Run" options above, you'll have to
# release and re-checkout any working directories of these modules.
#
# And "directory" is a path to a directory relative to $CVSROOT.
#
# The "-a" option specifies an alias.  An alias is interpreted as if
# everything on the right of the "-a" had been typed on the command line.
#
# You can encode a module within a module by using the special '&'
# character to interpose another module into the current module.  This
# can be useful for creating a module that consists of many directories
# spread out over the entire source repository.
powmap_uk powmap/uk
powmap_diana powmap/diana
powmap_collections powmap/collections
powmap_etc powmap/etc
powmap_lib powmap/lib
powmap_META-INF powmap/META-INF
powmap_corba powmap/corba

flatserve flatimpl &diana &corba &etc &uk &collections
agct agctimpl &uk &diana &etc &collections
flatserve_control flatserve_control_impl &powmap_lib &powmap_corba &powmap_diana &powmap_etc &powmap_uk &powmap_collections
artemis_applet artemis_applet_impl &powmap_diana &powmap_etc &powmap_uk &powmap_collections &powmap_META-INF

AnT zoo/modules/AnT
public_modules public_modules_impl &AnT

zoo_art_config psu/config/art
zoo_data psu/data
zoo_app psu/src/perl/app
zoo_general psu/src/perl/general
zoo_modules psu/src/perl/modules
zoo_pombe psu/src/perl/pombe
zoo_strepc psu/src/perl/strepc

zoo zoo_impl &zoo_art_config &zoo_data &zoo_app &zoo_general &zoo_modules &zoo_pombe &zoo_strepc 