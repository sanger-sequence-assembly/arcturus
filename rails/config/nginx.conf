worker_processes 5;

pid  /psg/run/training/arcturus/pid/nginx.pid;
error_log   /psg/run/training/arcturus/log/nginx.error.log;

events {
    worker_connections  1024;
}

http {
    include       /psg/run/training/arcturus/config/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] $request '
                      '"$status" $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /psg/run/training/arcturus/log/nginx.access.log  main;
    client_body_temp_path /psg/run/training/arcturus/nginx/client_temp 1 2;
    proxy_temp_path /psg/run/training/arcturus/nginx/proxy_temp 1 2;
    fastcgi_temp_path /psg/run/training/arcturus/nginx/fastcgi_temp 1 2;

    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     off;

    #keepalive_timeout  0;
    keepalive_timeout  500;

    gzip              on;
    gzip_http_version 1.0;
    gzip_comp_level   2;
    gzip_proxied      any;
    gzip_types        text/plain text/html text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript;

    upstream mongrel {
      fair;
      server psd1a.internal.sanger.ac.uk:15001;
      server psd1a.internal.sanger.ac.uk:15002;
      server psd1a.internal.sanger.ac.uk:15003;
      server psd1a.internal.sanger.ac.uk:15004;
      server psd1a.internal.sanger.ac.uk:15005;
    }

    server {
        listen       15000;
        client_max_body_size 50M;
        root html;

        #access_log  log/host.access.log  main;
        rewrite_log on;

        if (-f /psg/run/training/arcturus/system/maintenance.html) {
          rewrite  ^(.*)$  /system/maintenance.html last;
          break;
        }

       location / {
          # needed to forward user's IP address to rails
          proxy_set_header  X-Real-IP  $remote_addr;

          root   html;
          index  index.html index.htm;

          # needed for HTTPS
          proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header Host $http_host;
          proxy_redirect false;
          proxy_max_temp_file_size 0;
	  proxy_read_timeout 500;
	
          # If the file exists as a static file serve it directly without
          # running all the other rewite tests on it
          if (-f $request_filename) {
            break;
          }

          # this is the meat of the rails page caching config
          # it adds .html to the end of the url and then checks
          # the filesystem for that file. If it exists, then we
          # rewite the url to have explicit .html on the end 
          # and then send it on its way to the next config rule.
          # if there is no file on the fs then it sets all the 
          # necessary headers and proxies to our upstream mongrels
          if (-f $request_filename.html) {
            rewrite (.*) $1.html break;
          }

          if (!-f $request_filename) {
            proxy_pass http://mongrel;
            break;
          }
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443;
    #    server_name  localhost;

    #    ssl                  on;
    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_timeout  5m;

    #    ssl_protocols  SSLv2 SSLv3 TLSv1;
    #    ssl_ciphers  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;
    #    ssl_prefer_server_ciphers   on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
