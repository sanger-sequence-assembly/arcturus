<?xml version="1.0"?>


<!-- remember to rebuild the jar if you make any changes to this file by deleting it first to force a complete ant rebuild -->


<!-- consistency-checker-build.xml - kt6 24/11/10 simple Ant buildfile -->
<project name="ArcturusConsistencyChecker" default="jar" basedir=".">
	<property name="project.name" value="consistency-checker"/>
	<property name="package.prefix" value="uk.ac.sanger"/>
	<property name="jar.file" value="${project.name}.jar" />
	<property name="zip.file" value="${project.name}.zip" />

	<!-- The directory containing source code -->
	<property name="src.dir" value="src"/>

	<!-- The directory containing classpath JAR files -->
	<property name="lib.dir" value="lib"/>

	<!-- Classpath for compilation -->
	<path id="build.classpath">
		<fileset dir="${lib.dir}">
			<include name="*.jar" />
		</fileset>
	</path>

	<path id="test.classpath">
	  <pathelement location="./lib/junit.jar" />
	  <pathelement location="./lib/mockito-all-1.8.4.jar" />
	  <pathelement location="./lib/mysql-connector-java-5.1.6-bin.jar" />
	  <pathelement location="./build/classes" />
	</path>

	<!-- The directory containing the test classes -->
	<property name="testsrc.dir" value="test"/>

	<!-- Temporary build directories -->
	<property name="build.dir" value="build"/>
	<property name="build.classes" value="${build.dir}/classes"/>
	<property name="build.lib" value="${build.dir}/lib"/>

	<!-- Documents directory -->
	<property name="javadoc.dir" value="${build.dir}/docs"/>

	<!-- Resources directory -->
	<property name="resources.dir" value="${src.dir}/resources" />

	<!-- Target version of Java -->
	<property name="build.target" value="1.6" />

	<!-- Build properties -->
	<property name="build.props.file" value="${resources.dir}/build.props" />
	
	<target name="setBuildVersion">
		<exec executable="svnversion" dir="${basedir}" outputproperty="build.version"/>
		<exec executable="hostname" outputproperty="build.host" />
		<echo file="${build.props.file}">build.date=${build.time}${line.separator}</echo>
		<echo file="${build.props.file}" append="true">build.version=${build.version}${line.separator}</echo>
		<echo file="${build.props.file}" append="true">build.by=${user.name}${line.separator}</echo>
		<echo file="${build.props.file}" append="true">build.host=${build.host}${line.separator}</echo>
	</target>

	<!-- Target to create the build directories prior to the -->
	<!-- compile target. -->
	<target name="prepare" depends="">
		<mkdir dir="${build.dir}"/>
		<mkdir dir="${build.classes}"/>
		<mkdir dir="${build.lib}"/>
		<mkdir dir="${javadoc.dir}"/>
	</target>

	<target name="clean" description="Remove all generated files.">
		<delete dir="${build.dir}"/>
	</target>

	<target name="compile" depends="prepare"
          description="Compiles all source code.">
		<javac srcdir="${src.dir}" destdir="${build.classes}" 
           source="${build.target}"
           target="${build.target}"
	   classpathref="build.classpath"
	   debug="true"/>
	</target>

	<tstamp>
		<format property="build.time" pattern="yyyy MMM dd HH:mm" locale="en,UK"/>
	</tstamp>

	<tstamp>
		<format property="jar.file.time" pattern="yyyyMMddHHmmss" locale="en,UK"/>
	</tstamp>

	<property name="jar.file.name" value="consistency-checker.jar" />

	<target name="jar" depends="compile, setBuildVersion"
          description="Generates the JAR file for Arcturus Consistency Checker">
		<echo file="${src.dir}/resources/buildtime.props">BuildTime=${build.time}${line.separator}</echo>

		<jar jarfile="${jar.file.name}"
         manifest="${src.dir}/CC-MANIFEST.MF">
			<fileset dir="${build.classes}" includes="uk/**" />
			<fileset dir="${src.dir}" includes="resources/icons/*.*,resources/images/*.*,resources/xml/*.*,resources/*.props"/>
		</jar>

	</target>

	<target name="zip" depends="jar"
          description="Generates a ZIP archive of Arcturus Consistency Checker">
		<zip destfile="${zip.file}" compress="false">
			<fileset dir="." includes="${jar.file}" />
			<zipfileset dir="${lib.dir}" includes="*.jar" prefix="lib" />
		</zip>
	</target>

	<target name="all" depends="clean,jar,zip"
          description="Cleans, compiles, then builds the JAR file." />
	
	<target name="run" depends="jar">
	        <java fork="true" classname="${main-class}">
	            <classpath>
	                <path refid="classpath"/>
	                <path location="${lib.dir}/${jar.file.name}.jar"/>
	            </classpath>
	        </java>
	    </target>

</project>
