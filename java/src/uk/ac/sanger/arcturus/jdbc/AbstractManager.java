package uk.ac.sanger.arcturus.jdbc;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Statement;

import uk.ac.sanger.arcturus.database.ArcturusDatabaseException;

public abstract class AbstractManager {
	protected boolean cacheing = true;
	protected Connection conn;

	public void setCacheing(boolean cacheing) {
		this.cacheing = cacheing;
	}

	public boolean isCacheing() {
		return cacheing;
	}

	public abstract void clearCache();
	
	public abstract void preload() throws ArcturusDatabaseException;
	
	protected abstract void prepareConnection() throws SQLException;
	
	protected PreparedStatement prepareStatement(String query) throws SQLException {
		return prepareStatement(query, Statement.NO_GENERATED_KEYS);
	}
	
	protected PreparedStatement prepareStatement(String query, int autoGeneratedKeys) throws SQLException {
		if (conn == null)
			throw new SQLException("Cannot prepare a statement on a null connection");
		
		try {
			return conn.prepareStatement(query, autoGeneratedKeys);
		}
		catch (SQLException e) {
			throw new SQLException("Failed to prepare statement \"" + query + "\"", e);
		}
	}

	protected void setConnection(Connection conn) throws SQLException {
		this.conn = conn;		
		prepareConnection();
	}
	
	protected Connection getConnection() {
		return conn;
	}
}
