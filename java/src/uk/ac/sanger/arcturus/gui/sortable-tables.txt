Sortable Tables in Arcturus
---------------------------

The Arcturus Java GUI provides a convenient programming framework for
sortable tables. This is done by extending the JTable and TableModel
classes to add methods to support sorting when the header of a table
is clicked.

The SortableTableModel interface extends the TableModel interface
by mandating the existence of two additional methods:

public boolean isColumnSortable(int column)

  This method returns true if the specified column is eligible for
  sorting.

public void sortOnColum(int column, boolean ascending)

  This method updates the ynderlying table model by sorting on the
  specified column.

The SortableTable class extends JTable by adding a constructor which
takes a SortableTableModel and by adding a listener method which is
activated by mouse clicks in the table header. This listener checks
whether the underlying table model is a SortableTableModel, and
whether the column whose header was clicked is sortable. If both
conditions are satisfied, then the table is sorted on that column.

How to implement a sortable table
---------------------------------

As an example, consider the contig table package. This implements
a sortable table which displays the properties of contigs. Each
contig is represented as a Contig object. The table's underlying
model is based upon a Vector of Contig objects.

(If you don't have a class which encapsulates the objects that your
table is meant to display, you will need to implement class to act
as a proxy. In this example, you might create a ContigProxy object
to act as a proxy for a Contig object. Your table model would then
be based upon a Vector of ContigProxy objects.)

You will now need to implement several classes:

ContigList

  This is a simple wrapper for a Vector of Contig objects.

ContigComparator

  This implements the Comparator interface. It will be used to sort
  the ContigList. It should include public methods which allow you
  to specify which property is to be used for sorting (size, creation
  date, name, ...) and the direction (ascending or descending).

ContigTableModel

  This class extends AbstractTableModel and implements SortableTableModel.
  It will implement the methods mandated by the TableModel class to
  return the number of rows and columns, the name and class of each
  column, and the contents of a specified cell.

  It may also implement methods to control display attributes such as
  the background colour for a particular row, which may be called by
  the prepareRenderer method of the owning ContigTable object.

  This class must also implement the two methods mandated by the
  SortableTableModel interface. The sortOnColumn method should sort
  the underlying ContigList vector and then call fireTableDataChanged
  to force the owning ContigTable to refresh its display. The isSortable
  method indicates which columns are candidates for sorting.

ContigTable

  This class extends SortableTable.

  It may enhance the visual layout of the table by colouring
  different rows according to some property of the object that
  the row represents or by alternating the background colour of
  successive rows to make the table easier to read.

ContigTableFrame

  This class extends MinervaFrame and provides a container for the
  table. It will normally put the ContigTable inside a JScrollPane.
  It will also implement a mouse event listener on the table to handle
  selection events such as double-clicks.
