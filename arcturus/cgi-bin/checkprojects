#!/usr/local/bin/perl -w

#############################################################################
# Housekeeping script to check the allocation of projects on current server
#
# This script can be run under backticks servers. Should also be run in GUI
#############################################################################

use strict;

use GateKeeper; 

##############################################################################
# get configuration data, open CGI and MySQL Database
##############################################################################

my $GateKeeper = new GateKeeper('mysql',{writeAccess => 1});

my $config     = $GateKeeper->configHandle();

my $organisms  = $GateKeeper->dbHandle('arcturus',{returnTableHandle => 1});

my $users      = $organisms->spawn('USERS','arcturus',0,1);

##############################################################################
# MAIN
##############################################################################

my $whereAmI = $GateKeeper->whereAmI;
$GateKeeper->dropDead($whereAmI) if !($whereAmI =~ s/^(\w).*$/$1/); 
$whereAmI = uc($whereAmI); # P or D

my $server = $GateKeeper->{server};
$server =~ s/(\.sanger\.ac\.uk)?\:/%/;

my $page = $GateKeeper->GUI("Checking project allocations on current server $server");

if (my $databases = $organisms->associate('dbasename',$server,'residence',1)) {

    my @databases;
    $databases[0] = $databases;
    @databases = @$databases if (ref($databases) eq 'ARRAY');

    foreach my $database (@databases) {
        $GateKeeper->focus({useDatabase=>$database});
        $GateKeeper->report("Testing database $database");
        my $query = "select USERS2PROJECTS.userid,PROJECTS.projectname,ASSEMBLY.assemblyname ";
        $query .= "from PROJECTS,ASSEMBLY,USERS2PROJECTS ";
        $query .= "where  PROJECTS.project = USERS2PROJECTS.project ";
        $query .= "and ASSEMBLY.assembly = PROJECTS.assembly ";
        my $hashes = $organisms->query($query,0,0);
#$GateKeeper->report("hashes $hashes");
        foreach my $hash (@$hashes) {
#$GateKeeper->report("$hash->{userid}  $hash->{projectname}  $hash->{assemblyname}");
            my $attribute = "$hash->{projectname}-$hash->{assemblyname}";
            $users->packAttribute($hash->{userid},'userid','attributes',$attribute,$whereAmI);
        }
    }
}
else {
    $GateKeeper->report("No Arcturus database found on this server");    
    $GateKeeper->disconnect;
    exit 0;
}

##############################################################################
# EXIT
##############################################################################

$GateKeeper->report("Closing down");
$GateKeeper->disconnect;

$page->flush  if $page;

# now startup the equalizing script on the USERS tables

my $temp = $config->get('ARC_TMP_DIR');
my $root = $GateKeeper->prepareFork('harmonize');
system ("$root/harmonize users copy > $temp/harmonize.log");

exit 0;
