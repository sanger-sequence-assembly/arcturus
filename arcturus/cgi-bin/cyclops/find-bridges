#!/usr/local/bin/perl -w

#############################################################################
# get assembly data for  Cyclops from ARCTURUS database
#############################################################################

use strict; # Constraint variables declaration before using them

use GateKeeper; 

##############################################################################
# unbuffered output
##############################################################################

open(STDERR,">&STDOUT") || die "Can't dump to STDOUT: $!\n";
select(STDERR); $| = 1; # Make unbuffered.
select(STDOUT); $| = 1; # Make unbuffered.

##############################################################################
# get configuration data, open CGI and MySQL Database
##############################################################################

my $GateKeeper = GateKeeper->new('mysql',0);

my $config     = $GateKeeper->configHandle();

my $cgi        = $GateKeeper->cgiHandle();

my $database   = $cgi->parameter('database') || $cgi->parameter('organism');

my $organisms  = $GateKeeper->dbHandle($database,{returnTableHandle => 1});

$GateKeeper->cgiHeader(1); # return string plain

##############################################################################
# MAIN
##############################################################################

my $gapfactor = $cgi->parameter('gap') || 1.2;
my $minnreads = $cgi->parameter('min') || 1;
my $minlength = $cgi->parameter('length') || 2000;

print "Search with gap $gapfactor * insert lenght and minimum contig length $minlength\n\n";

$GateKeeper->focus(1);;

my $query  = "select   CF.contig_id as cfid, CR.contig_id as crid, ";
   $query .= "         R2CF.read_id as rfid, R2CR.read_id as rrid, ";
   $query .= "         RF.readname  as rfrn, RR.readname  as rrrn, ";
   $query .= "         R2CF.pcstart as cfps, R2CF.pcfinal as cfpf, ";
   $query .= "         R2CR.pcstart as crps, R2CR.pcfinal as crpf, ";
   $query .= "         CF.length    as cfl , CR.length    as crl , ";
   $query .= "         LIGATIONS.sihigh as size ";
   $query .= "from     READPAIRS, READS2CONTIG as R2CF, READS2CONTIG as R2CR, ";
   $query .= "         CONTIGS as CF, CONTIGS as CR, READS as RF, READS as RR, ";
   $query .= "         LIGATIONS ";
   $query .= "where    R2CF.read_id = READPAIRS.forward AND R2CF.contig_id = CF.contig_id ";
   $query .= "and      R2CR.read_id = READPAIRS.reverse AND R2CR.contig_id = CR.contig_id ";
   $query .= "and      RF.read_id = READPAIRS.forward AND RR.read_id = READPAIRS.reverse ";
   $query .= "and      RF.ligation = LIGATIONS.ligation ";
   $query .= "and      R2CF.label >= 10 AND R2CR.label >= 10 ";
   $query .= "and     (R2CF.pcstart >= CF.length - LIGATIONS.sihigh * $gapfactor) " if $gapfactor;
   $query .= "and     (R2CR.pcfinal <= LIGATIONS.sihigh * $gapfactor) "             if $gapfactor;
   $query .= "and      R2CF.generation = 0 AND R2CR.generation = 0 ";
   $query .= "and      CF.contig_id != CR.contig_id ";
   $query .= "and      CF.nreads >= $minnreads AND CR.nreads >= $minnreads " if $minnreads;
   $query .= "and      CF.length >= $minlength AND CR.length >= $minlength " if $minlength;
   $query .= "order by CF.contig_id, CR.contig_id,  RF.readname";

my $hashes = $organisms->query($query);

my $nr = 0; $nr = @$hashes if (ref($hashes) eq 'ARRAY');

print "$nr bridges found \n\n";

$GateKeeper->dropDead("No data return on this query: $query") if !$nr;

print " contig  readid & name (For)      contig range & length  <=> "; 
print " contig  readid & name (Rev)      contig range & length  size\n\n"; 
 
foreach my $hash (@$hashes) {
    my $cfid = $hash->{cfid};
    my $rfid = $hash->{rfid};
    my $rfrn = $hash->{rfrn};
    my $crid = $hash->{crid};
    my $rrid = $hash->{rrid};
    my $rfrr = $hash->{rrrn};
    my $cfps = $hash->{cfps};
    my $cfpf = $hash->{cfpf};
    my $crps = $hash->{crps};
    my $crpf = $hash->{crpf};
    my $cfl  = $hash->{cfl};
    my $crl  = $hash->{crl};
    my $size = $hash->{size};
    my $line = sprintf ("%7d %6d %-16s %7d-%7d %7d  <-> %7d %6d %-16s %7d-%7d %7d   %6d",
    $cfid ,$rfid, $rfrn, $cfps, $cfpf, $cfl, $crid, $rrid, $rfrr, $crps, $crpf, $crl, $size);
    print "$line \n";
}


##############################################################################
# EXIT
##############################################################################

$GateKeeper->disconnect();

exit 0;
