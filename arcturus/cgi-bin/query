#!/usr/local/bin/perl -w

#############################################################################
#
# return an HTML query form for ARCTURUS database searches
#
#############################################################################

use strict;

use GateKeeper; 
use ReadsRecall;
use ContigRecall;

##############################################################################

my %goptions = (insistOnCgi => 1, writeAccess => 0);
my $GateKeeper = new GateKeeper('mysql',\%goptions);

#$GateKeeper->cgiHeader(2); # return string plain

my $cgi        = $GateKeeper->cgiHandle();

my $database   = $cgi->parameter('database');

my ($void,$action,$tablename) = split ('/',$GateKeeper->origin);

$database = 'arcturus' if ($action =~ /select|empty|dictionary|listentry/ && !$database);

my $organisms = $GateKeeper->dbHandle($database, {returnTableHandle => 1});

my $inventory = $organisms->spawn('INVENTORY','arcturus',1,1);

$GateKeeper->cgiHeader(2); # return string plain

##############################################################################
# MAIN
##############################################################################

my $USERSUPPORT = $GateKeeper->lookup("USERSUPPORT");
my $db_manager  = $GateKeeper->lookup("db_manager");    
my $arc_cgi_dir = $GateKeeper->lookup("ARC_CGI_DIR");  
my $arc_htm_dir = $GateKeeper->lookup("ARC_HTML_DIR");
  
my $signame = $GateKeeper->lookup('signature_name');
my $sigmail = $GateKeeper->lookup('signature_mail');

my $page = $cgi->openPage("ARCTURUS assembly-tracking database $database");
$page->address($sigmail,$signame,2);
$page->frameborder(100,15,'white',15);
$page->center(1);

my $SM = "<small>"; my $sm = "</small>";

##############################################################################

if ($inventory->{errors} || $organisms->{errors}) {
    $page->errorbox("ARCTURUS database cannot be accessed<BR>$inventory->{errors}");
    $page->messagebox("Please contact $db_manager or your project manager",0,0,'yellow');
}

elsif ($action eq 'preselect') {

    $page->form("$arc_cgi_dir/query/overview");
    $page->partition(2);
    $page->sectionheader("ARCTURUS assembly tracking database: OVERVIEW",3,0);
    $page->partition(1);
    my $count = $organisms->count();
    $page->sectionheader("There are $count Organism databases",3,0);
    $page->add($organisms->htmlTable('011000001111000001'));
    my $select =  $organisms->htmlOptions('dbasename','database',20,0,'arcturus');
    $page->sectionheader("Select a database and submit: $select",4,0);
    $page->partition(5);
    $page->center(1);
    $page->submitbuttonbar("$arc_htm_dir/arcturus.html",0,0,'HOME');
}

elsif ($action eq 'overview' && $database eq 'arcturus') {

    $inventory->autoVivify('arcturus',1);
    my $instances = $inventory->getInstanceOf(0);

    $page->partition(2);
    $page->sectionheader("ARCTURUS assembly-tracking database",3,0);

    $page->partition(1);
    $page->sectionheader("Common Tables",3,0);
    my $w1 = "WIDTH=120"; my $w2 = "WIDTH=60"; my $w3 = "WIDTH=40";
    my $list  = "<table border=1 cellpadding=3>"; my $bg = "BGCOLOR='yellow'";
    my $more = "bgcolor=lightsteelblue";
    $list .= "<TR><TH $bg $w1>table</TH><TH $bg $w2>size</TH><TH $bg $w3>&nbsp</TH></TR>";
    my $session = $GateKeeper->lookup('session') || '';
    foreach my $table (keys %$instances) {
        my $dbase  = $instances->{$table};
        $table =~ s/\w+\.(\w+\.\w+)/$1/;
        my $name   = $table; $name =~ s/($database|arcturus)\.//;
#        my $name   = (split '\.',$table)[2];
        my $domain = $inventory->associate ('domain',$name,'tablename');
        my $status = $inventory->associate ('status',$name,'tablename');
        if ($domain eq 'c' && $status ne 'l') {
            undef my $entry;
            my $count = $dbase->count(0);
            $entry .= "<TR><TD>$name</TD><TD>$count</TD>";
            if ($count) {
                my $detail = "$arc_cgi_dir/query/dictionary/$table";
                $detail .= "\?session=$session" if ($session =~ /\boper|ejz\b/);
                $entry .= "<TD ALIGN=CENTER $more $w3><A href=\"$detail\"> list </a></td></tr>";
            }
            else {
                $entry .= "<TD ALIGN=CENTER $w3> &nbsp </TD>";
            }
            $list .= $entry;
        }
    }
    $list .= "</table>";
    $page->add($list,0,0);

    $page->partition(5);
    $page->center(1); $page->add("<p>");
    my $link = "$arc_cgi_dir/query/preselect";
    $page->linkbutton("RETURN to OVERVIEW",$link,0,'lightgreen');
}

elsif ($action eq 'overview') {

    $page->quartetborder(100,8,'white',8);

    $page->partition(5);
    $page->center(1);
    my $link = "$arc_cgi_dir/query/preselect";
    $page->linkbutton("RETURN to OVERVIEW",$link,0,'lightgreen');

    $page->partition(2);
    $page->sectionheader("ARCTURUS assembly tracking database $database",3,0);
    my $DMODEL  = $organisms->spawn("DATAMODEL",'arcturus',0,0);
    my $READS   = $organisms->spawn("READS"  ,$database,0,0);
    my $PENDING = $organisms->spawn("PENDING",$database,0,0);
    my $CONTIGS = $organisms->spawn("CONTIGS",$database,0,0);
    my $instances = $DMODEL->getInstanceOf(0);

    undef my $target;

    my %tables;
    $inventory->autoVivify($database,1,0);    
    foreach my $table (keys %$instances) {
        $tables{$table}++;
    }

    my $w1 = "WIDTH=140"; my $w2 = "WIDTH=65"; my $w3 = "WIDTH=40";
    my $bg = "BGCOLOR='yellow'"; my $tw = "WIDTH=100%";
    my $more = "bgcolor=lightsteelblue";

    $page->partition(1);
    my $list = "<table border=1 cellpadding=3 $tw>";
    $list .= "<TR><TH ALIGN=CENTER COLSPAN=3 BGCOLOR='lightyellow'>Main</TH></TR>";
    $list .= "<TR><TH $bg $w1>Table Name</TH><TH $bg $w2>Size</TH><TH $bg $w3>&nbsp</TH></TR>";

    foreach my $table (sort keys %tables) {
        my $dbase  = $instances->{$table};
        $table =~ s/\w+\.(\w+\.\w+)/$1/;
        my $name   = $table; $name =~ s/($database|arcturus)\.//;
#print "name $name <br>\n";
        my $domain = $inventory->associate ('domain',$name,'tablename');
        my $status = $inventory->associate ('status',$name,'tablename');
        if ($domain eq 'o' && $status eq 'p') {
            undef my $entry;
            my $count = $dbase->count(0);
            $entry .= "<TR><TD>$name</TD><TD>$count</TD>";
            my $anchor = "$arc_cgi_dir/query/select/$table";
            if ($count) {
                $entry .= "<TD ALIGN=CENTER $more><A href=\"$anchor\"> query </a></td></tr>";
            }
            else {
                $entry .= "<TD ALIGN=CENTER $w3> &nbsp </TD>";
            }
            $list .= $entry;
        }
    }
    $list .= "</table>";
#    $page->add($list,0,0);
    $page->add($list);
    $page->space(1);

    $page->partition(1);
    $list = "<table border=1 cellpadding=3 $tw>";
    foreach my $table (keys %tables) {
        my $dbase  = $instances->{$table};
        $table =~ s/\w+\.(\w+\.\w+)/$1/;
        my $name   = $table; $name =~ s/($database|arcturus)\.//;
        my $domain = $inventory->associate ('domain',$name,'tablename');
        my $status = $inventory->associate ('status',$name,'tablename');
        if ($domain eq 'o' && $status eq 'o') {
            undef my $entry;
            my $count = $dbase->count(0);
            $entry .= "<TR><TD $w1>$name</TD><TD $w2>$count</TD>";
            my $anchor = "$arc_cgi_dir/query/dictionary/$table";
            if ($count) {
                $target = "target=\"arcturustable\""; 
                $entry .= "<TD ALIGN=CENTER $more $w3><A href=\"$anchor\" $target> list </a></td></tr>";
	    }
            else {
                $entry .= "<TD ALIGN=CENTER $w3> &nbsp </TD>";
            }
            $list .= $entry;
        }
    }
    $list .= "</table>";
#    $page->add($list,0,0);
    $page->add($list);

    $page->partition(1);
    $list = "<table border=1 cellpadding=3 $tw>";
    $list .= "<TR><TH ALIGN=CENTER COLSPAN=3 BGCOLOR='lightyellow'>Tags</TH></TR>";
    $list .= "<TR><TH $bg $w1>Table</TH><TH $bg $w2>Size</TH><TH $bg $w3>&nbsp</TH></TR>";

    foreach my $table (sort keys %tables) {
        my $dbase  = $instances->{$table};
        $table =~ s/\w+\.(\w+\.\w+)/$1/;
        my $name   = $table; $name =~ s/($database|arcturus)\.//;
        my $domain = $inventory->associate ('domain',$name,'tablename');
        my $status = $inventory->associate ('status',$name,'tablename');
        if ($domain eq 'o' && ($status eq 't' || $status eq 's')) {
            undef my $entry;
            my $count = $dbase->count(0);
            $entry .= "<TR><TD>$name</TD><TD>$count</TD>";
            if ($count) {
                my $anchor = "$arc_cgi_dir/query/dictionary/$table";
                $anchor =~ s/dictionary/tagselect/ if ($table =~ /TAG/);
                $target = "target=\"arcturustable\""; 
                $target = ' ' if ($table =~ /TAG/);
                $entry .= "<TD ALIGN=CENTER $more><A href=\"$anchor\" $target> list </a></td></tr>";
            }
            else {
                $entry .= "<TD ALIGN=CENTER> &nbsp </TD>";
            }
            $list .= $entry;
        }
    }
    $list .= "</table>";
#    $page->add($list,0,0);
    $page->add($list);
    $page->space(1);
 
# the dictionary tables

    $page->partition(6);
    $list = "<table border=1 cellpadding=3 $tw>";
    $list .= "<TR><TH ALIGN=CENTER COLSPAN=3 BGCOLOR='lightyellow'>Dictionary Tables</TH></TR>";
    $list .= "<TR><TH $bg $w1>Table</TH><TH $bg $w2>Size</TH><TH $bg $w3>&nbsp</TH></TR>";
    foreach my $table (keys %tables) {
        my $dbase  = $instances->{$table};
        $table =~ s/\w+\.(\w+\.\w+)/$1/;
        my $name   = $table; $name =~ s/($database|arcturus)\.//;
        my $domain = $inventory->associate ('domain',$name,'tablename');
        my $status = $inventory->associate ('status',$name,'tablename');
        if ($status eq 'd') {
            undef my $entry;
            my $count = $dbase->count(0);
            $entry .= "<TR><TD>$name</TD><TD>$count</TD>";
            if ($count) {
                my $anchor = "$arc_cgi_dir/query/dictionary/$table";
                $target = "target=\"arcturustable\""; 
                $entry .= "<TD ALIGN=CENTER $more><A href=\"$anchor\" $target> list </a></td></tr>";
            }
            else {
                $entry .= "<TD ALIGN=CENTER> &nbsp </TD>";
            }
            $list .= $entry;
        }
    }
    $list .= "</table>";
#    $page->add($list,0,0);
    $page->add($list);
    $page->space(1);

# the map tables

    $page->partition(6);
    $list = "<table border=1 cellpadding=3 $tw>";
    $list .= "<TR><TH ALIGN=CENTER COLSPAN=3 BGCOLOR='lightyellow'>Mapping</TH></TR>";
    $list .= "<TR><TH $bg $w1>Table</TH><TH $bg $w2>Size</TH><TH $bg $w3>&nbsp</TH></TR>";
    foreach my $table (keys %tables) {
        my $dbase  = $instances->{$table};
        $table =~ s/\w+\.(\w+\.\w+)/$1/;
        my $name   = $table; $name =~ s/($database|arcturus)\.//;
        my $domain = $inventory->associate ('domain',$name,'tablename');
        my $status = $inventory->associate ('status',$name,'tablename');
        if ($domain eq 'o' && $status eq 'm') {
            undef my $entry;
            my $count = $dbase->count(0);
            $entry .= "<TR><TD>$name</TD><TD>$count</TD>";
            if ($count) {
                my $anchor = "$arc_cgi_dir/query/linkselect/$table";
                $entry .= "<TD ALIGN=CENTER $more><A href=\"$anchor\"> query </a></td></tr>";
            }
            else {
                $entry .= "<TD ALIGN=CENTER> &nbsp </TD>";
            }
            $list .= $entry;
        }
    }
    $list .= "</table>";
#    $page->add($list,0,0);
    $page->add($list);

# the link tables

    $page->partition(8);
    $list = "<table border=1 cellpadding=3 $tw>";
    $list .= "<TR><TH ALIGN=CENTER COLSPAN=3 BGCOLOR='lightyellow'>Link Tables</TH></TR>";
    $list .= "<TR><TH $bg $w1>Table</TH><TH $bg $w2>Size</TH><TH $bg $w3>&nbsp</TH></TR>";
    foreach my $table (keys %tables) {
        my $dbase  = $instances->{$table};
        $table =~ s/\w+\.(\w+\.\w+)/$1/;
        my $name   = $table; $name =~ s/($database|arcturus)\.//;
        my $domain = $inventory->associate ('domain',$name,'tablename');
        my $status = $inventory->associate ('status',$name,'tablename');
        if ($status eq 'l') {
            undef my $entry;
            my $count = $dbase->count(0);
            $entry .= "<TR><TD>$name</TD><TD>$count</TD>";
            if ($count) {
                my $anchor = "$arc_cgi_dir/query/linkselect/$table";
                $entry .= "<TD ALIGN=CENTER $more><A href=\"$anchor\"> query </a></td></tr>";
            }
            else {
                $entry .= "<TD ALIGN=CENTER> &nbsp </TD>";
            }
            $list .= $entry;
        }
    }
    $list .= "</table>";
#    $page->add($list,0,0);
    $page->add($list);

    $page->partition(1);
    $list = "<table border=1 cellpadding=3 $tw>";
#    $list .= "<TR><TH $bg $w1>Table</TH><TH $bg $w2>Size</TH><TH $bg $w3>&nbsp</TH></TR>";
    foreach my $table (keys %tables) {
        my $dbase  = $instances->{$table};
        $table =~ s/\w+\.(\w+\.\w+)/$1/;
        my $name   = $table; $name =~ s/($database|arcturus)\.//;
        my $domain = $inventory->associate ('domain',$name,'tablename');
        my $status = $inventory->associate ('status',$name,'tablename');
        if ($status eq 'a') {
            undef my $entry;
            my $count = $dbase->count(0);
            $entry .= "<TR><TD $w1>$name</TD><TD $w2>$count</TD>";
            if ($count) {
                my $anchor = "$arc_cgi_dir/query/select/$table";
                $entry .= "<TD ALIGN=CENTER $more $w3><A href=\"$anchor\"> query </a></td></tr>";
            }
            else {
                $entry .= "<TD ALIGN=CENTER $w3> &nbsp </TD>";
            }
            $list .= $entry;
        }
    }
    $list .= "</table>";
#    $page->add($list,0,0);
    $page->add($list);

    $page->partition(7);
    $list = "<table border=1 cellpadding=3 $tw>";
    $list .= "<TR><TH ALIGN=CENTER COLSPAN=3 BGCOLOR='lightyellow'>Common Tables</TH></TR>";
    $list .= "<TR><TH $bg $w1>Table</TH><TH $bg $w2>Size</TH><TH $bg $w3>&nbsp</TH></TR>";
#    my $session = $GateKeeper->lookup('session') || '';
    foreach my $table (keys %tables) {
        my $dbase  = $instances->{$table};
        $table =~ s/\w+\.(\w+\.\w+)/$1/;
        my $name   = $table; $name =~ s/($database|arcturus)\.//;
        my $domain = $inventory->associate ('domain',$name,'tablename');
        my $status = $inventory->associate ('status',$name,'tablename');
        if ($domain eq 'c' && $status ne 'o') {
            undef my $entry;
            my $count = $dbase->count(0);
            $entry .= "<TR><TD>$name</TD><TD>$count</TD>";
            if ($count) {
                my $anchor = "$arc_cgi_dir/query/dictionary/$table";
#            $anchor .= "\?session=$session" if ($session =~ /\boper|ejz\b/);
                $target = "target=\"arcturustable\""; 
                $entry .= "<TD ALIGN=CENTER $more><A href=\"$anchor\" $target> list </a></td></tr>";
            }
            else {
                $entry .= "<TD ALIGN=CENTER> &nbsp </TD>";
            }
            $list .= $entry;
        }
    }
    $list .= "</table>";
#    $page->add($list,0,0);
    $page->add($list);
}

elsif (($action eq "dictionary" || $action eq "tagselect") && $tablename) {

    my ($database,$name) = split /\./,$tablename;
#    my $dbmodel = $organisms->spawn('DATAMODEL','arcturus',0,1);
    my $dbtable = $organisms->spawn($name,$database,0,1);
    $dbtable->build(1,'tablename')        if ($tablename =~ /INV/);
    $dbtable->build(1,'identifier')       if ($tablename =~ /LIG/);
    $dbtable->build(1,'projectname')      if ($tablename =~ /PRO/);
    $dbtable->build(1,'userid')           if ($tablename =~ /USE/);
    $dbtable->build(1,'cpkbstart')        if ($tablename =~ /MAP/);
    $dbtable->build(1,'assembly,tagname') if ($tablename =~ /STS/);
    $dbtable->build(1,'chemtype')         if ($tablename =~ /CHEMTYPES/);
    $dbtable->build(1,'timebegin DESC')   if ($tablename =~ /SESSIONS/);
    $dbtable->autoVivify($database,0) if ($name ne 'INVENTORY'); # setup of possible sublinks
# $dbtable->expandSequence('ACGTN ');

    $page->partition(2);
    $page->sectionheader("ARCTURUS assembly tracking database",3,0);
    $page->sectionheader("Common Table")     if ($database eq 'arcturus');
    $page->sectionheader("Dictionary Table for $database") if ($database ne 'arcturus');

    undef my $mask;
    $page->partition(1);    
    $mask = '111111100'           if ($tablename =~ /PEOPLE/);
    $mask = '01110000111002'      if ($tablename =~ /ORG/);
    my $session = $GateKeeper->lookup('session') || '';
    $mask = '010000011111000012'      if ($tablename =~ /ORG/ && $session =~ /\boper|ejz\b/);
    $mask = '03101111'            if ($tablename =~ /STSTAG/);
    $mask = '0101011111111000002' if ($tablename =~ /ASSEM/);
    $mask = '011111000000002'     if ($tablename =~ /USER/);
    $mask = '011111111000112'     if ($tablename =~ /PROJ/);
    my $table = $dbtable->htmlTable($mask);
    $table =~ s/\<TABLE/<TABLE WIDTH=60%/;
# fill in placeholders, if any
    $table =~ s?TABLELINK?$arc_cgi_dir/query/dictionary/?g;
    $table =~ s/TABLETARGET/target="arcturustable"/g;
    $table =~ s?ITEMLINK?$arc_cgi_dir/query/listentry/$tablename?g;
    $table =~ s/LINKTARGET/target="arcturustable"/g;
    $table =~ s/LINKTEXT/more/g;

    $page->add($table,0,0);
}

elsif ($action eq "empty") { 

#    my ($database,$name) = split /\./,$tablename;
#    $page->frameborder(100,25,'white',10);
#    $page->partition(2);
#    $page->sectionheader("ARCTURUS assembly tracking database \"$database\"",3,0);
#    my $link = "$arc_cgi_dir/query/overview\?database=$database";
#    $page->partition(1);
#    $page->messagebox("<H3>Sorry! Table $tablename is empty</h3>",$link,0,'lightcoral');
    print "should not occur!<br>";
}

# READS, CONTIGS, READEDITS, PENDING preselection

elsif ($action eq "select") {

# open the table in build 0 mode

    my ($database,$name) = split /\./,$tablename;
    my $dbtable = $organisms->spawn($name,$database,0);
    my $dbcount = $dbtable->count(0);

    $page->frameborder(100,25,'white',10);
    $page->partition(2);
    $page->sectionheader("ARCTURUS assembly tracking database \"$database\"",3,0);
    my $link = "$arc_cgi_dir/query/overview\?database=$database";
    $page->partition(1);
    $page->sectionheader("Specify your query on Table $name",4,0);

# build a preselection form for the selected database table

    if (!$dbcount) {
        $page->messagebox("Sorry! Table $name is empty");
    }
    elsif ($name =~ /READ/) {

        $page->form("$arc_cgi_dir/query/selectread");

        $page->add(&READS_form);

        $page->sectionheader("Specify Additional Constraints",4,0);

        $page->hidden('database',$database);

        $dbtable->autoVivify(); # get all dependencies

# now compose the read selection form

	  my @dbtbl;
        my $text = "<CENTER><TABLE CELLPADDING=0>";

    my %ihash = ('LIGATIONS','identifier','CHEMISTRY','identifier',
                 'CHEMTYPES','identifier','VECTORS','name',
                 'BASECALLER','description','PRIMERTYPES','description',
                 'STRANDS','description','PROJECTS','project_id',
                 'STATUS','description');
    my %khash = ('LIGATIONS','number','CHEMISTRY','number',
                 'CHEMTYPES','number','VECTORS','number',
                 'BCSOFTWARE','identifier','PRIMERTYPES','identifier',
                 'STRANDS','identifier','PROJECTS','project_nr',
                 'STATUS','number');
    my %rhash = ('ligation','LIGATIONS','chemistry','CHEMISTRY',
                 'cvector','VECTORS', 'svector','VECTORS',
                 'basecaller','BCSOFTWARE','primer','PRIMERTYPES',
# to be added               'project','PROJECTS', 'clone','CLONES',
                 'strand','STRANDS','status','STATUS');

    foreach my $readitem (sort keys (%rhash)) {
# $readitem is the catalogue item in READS, $rhash is the TABLE referenced
        my $tablename = $rhash{$readitem}; 
# identify the table
        undef my $tbl;
        foreach my $dbtable (@dbtbl) {
            $tbl = $dbtable if ($tablename eq $dbtable->{tablename});
        }
        if (defined($tbl) && $tbl->count() > 1) {
            my $item  = $ihash{$tablename};
            my $key   = $khash{$tablename};
            my ($status,$select) = $tbl->htmlOptions($item,$key,200,15);
            if ($status) {
                $select =~ s/$key/READS_$readitem/; # put the catalogue item
                $readitem =~ tr/[a-z]/[A-Z]/; # for cosmetic purposes
                $text  = "<TR><TD align=center>$SM$readitem$sm</TD>";
                $text .= "<TD>$SM$select$sm</TD></TR>";
            }
        } elsif (!defined($tbl)) {
            $text = "<TR><TD>$SM$readitem$sm</TD><TD>${SM}UNIDENTIFIED$sm</TD></TR>";
        }
    }
    $text .= "</TABLE>";
#	$page->add($text,1);

# add the line with the maximum number of lines to be returned

        my $max = "Return a maximum of <INPUT VALUE=24 SIZE=4 NAME=maxrows> rows";
        $page->add($max,0,0);

    }
    elsif ($name eq 'PENDING') {
print "detail: $tablename<br>";
    }
    elsif ($name eq 'CONTIGS') {

        $page->form("$arc_cgi_dir/query/selectcontig");

        $page->add(&CONTIGS_form);

        $page->hidden('database',$database);

# add the line with the maximum number of lines to be returned

        my $max = "Return a maximum of <INPUT VALUE=24 SIZE=4 NAME=maxrows> rows";
        $page->add($max,0,0);
    }

    $page->submitbuttonbar(1,0,0);
}

# preselection form on link tables

elsif ($action eq "linkselect") {
}

# preselection forms on Tags

elsif ($action eq "tagselect") {
}

# the following entries do process the queries formulated above  

elsif ($action eq "selectread") {

    my $dbread  = $organisms->spawn("READS",$database,0,0);
    my $initial = ReadsRecall->init($dbread);
    my $reader  = ReadsRecall->new();

# build various other tables 

    $dbread->autoVivify($database,2);

    my $readitem = $cgi->parameter('readitem');
    my $readnmbr = $cgi->parameter('readnmbr');
    my $readname = $cgi->parameter('readname');
    my $wildcard = $cgi->parameter('wildcard');
    my $limit = $cgi->parameter('maxrows') || 100;

    undef my $querystring;
    undef my $constraints;
    undef my $nameselect;
    my $number = 0;
    my $hashrefs;

    undef my $error;
    if ($readitem == 2) {
        $constraints = $GateKeeper->lookup('querytxt');
        $error = "please define a query" if (!$constraints);
        $dbread->unlink() if ($constraints =~ s/NOQT//); # for demonstration purposes        
    }
    elsif ($readitem && $readnmbr) {
        if ($readnmbr =~ /\blast\b\s*(\d*)/i) {
            $constraints = "order by read_id desc";
            $limit = $1 || 1; # overrides input 'maxrows'
        }
        elsif ($readnmbr !~ /\,|\-|\./) {
            my $status = $reader->getNumberedRead($readnmbr);
            $number = 1 if ($status <= 1);
        }
        elsif ($readnmbr =~ /\,/) {
            $constraints = "read_id in ($readnmbr)";
# test setup for spawning new reads in a series
my @number = split /\,/,$readnmbr; # test mode
my $hashes = $reader->spawnReads(\@number,'scompress,sequence,slength');
        }  
        else {
            my ($first,$last) = split /[\s\,\.\:\-]+/,$readnmbr;
            $constraints = "(read_id >= $first and read_id <= $last)";
# print "constraints: $constraints<br>\n";
        }
    }
    elsif ($readitem && !$readnmbr) {
        $error = "please provide a Read Number";
    }
    elsif (!$readname) {
        $error = "please provide a Read Name";
    }
    elsif (!$wildcard) {
        my $status = $reader->getNamedRead($readname);
        $number = 1 if ($status <= 1);  
    }
    else {
# readname and wildcard specified: compose the query constraints
        if ($wildcard == 1) {
            $nameselect = "readname like '$readname\%'";
        } 
        elsif ($wildcard == 2) {
            $nameselect = "readname like '\%$readname\%'";
        }
        my $cgihash = $cgi->{cgi_input};
        foreach my $key (keys (%$cgihash)) {
#print "key $key  input value $cgi->parameter($key}<br>\n";
            if ($key =~ /^(\w+)\_(\w+)$/ && $cgi->parameter($key)) {
#print "key $key  input value $cgi->parameter($key}<br>\n";
                my $keyname   = $2;
#print "table=$1  key=$keyname value=$cgi->parameter($key) ";
                my $keyvalue  = $dbread->quoteColValue ($keyname, $cgi->parameter($key));
                if (defined($keyvalue)) {
                    $constraints .= " and " if ($constraints);
                    $constraints .= "$keyname = $keyvalue";
                }
# print "constraints: $constraints<br>\n";
            }
        }
    }

# print "error $error  number $number<br>";
    if (!$error && !$number) {
# test if either nameselect or constraints exist
        my $querystring = "select read_id,readname from <self>";  
        if ($nameselect || $constraints) {
            $querystring .= ' where ';
            if ($nameselect) {
                $querystring .= $nameselect;
                $querystring .= ' and ' if ($constraints);
            }
            else {
                $querystring .= $constraints;
            }
            $querystring =~ s/where order/order/;
        }
        $querystring .= " limit $limit";
# print "query: $querystring<br>";
# now query the database
        $hashrefs = $dbread->query($querystring);
# determine output depending on number of reads selected
        $number = @$hashrefs if ($hashrefs && $hashrefs > 0);
        if ($number == 1) {
            my $readhash = $hashrefs->[0];
            my $read_id  = $readhash->{'read_id'};
            $reader->getNumberedRead($read_id,'read_id');
        }
        elsif (!$number) {
            $error = "! No reads found "; 
        }
    }

# get header

    $page->frameborder(100,5,'white',10);
    $page->partition(2);
    $page->sectionheader("ARCTURUS assembly tracking database query on $database.READS"); 
    $page->partition(1);
    $page->sectionheader("$number RESULTS",4,0) if ($number != 1);
      
    if ($error) {
        $page->errorbox($error);
    } 
    elsif ($number == 1) {
#        $reader->touch();
        $page->add($reader->list(1),0,0);
    } 
    else {
    # compose selection table
        my $table = "<TABLE CELLPADDING=1 BORDER=1>";
        $table .= "<TR><TH>read_id</TH><TH>readname</TH><TH>&nbsp</TH></TR>";
        foreach my $readhash (@$hashrefs) {
            my $read_id = $readhash->{read_id};
            my $read_nm = $readhash->{readname};
            my $anchor  =  "$arc_cgi_dir/query/selectread";
            $anchor .= "\?database=$database\&readitem=1\&readnmbr=$read_id";
            $table .= "<TR><TD>$read_id</TD><TD>$read_nm</TD>";
            $table .= "<TD><A href=\"$anchor\" bgcolor=\"lightblue\">detail</A></TD></TR>";
        }
        $table .= "</TABLE>";
        $page->add($table,0,0);
    }
}

 
elsif ($action eq "selectcontig") {

    my $CONTIGS = $organisms->spawn("CONTIGS",$database,0,0);
    my $creader = ContigRecall->init($CONTIGS,1);

    my $contigitem = $GateKeeper->lookup('contigitem');
    my $contignmbr = $GateKeeper->lookup('contignmbr');
    my $contigname = $GateKeeper->lookup('contigname');
    my $contigmask = $GateKeeper->lookup('searchitem') || 0;
    my $wildcard   = $GateKeeper->lookup('wildcard');
    my $limit = $GateKeeper->lookup('maxrows') || 100;

    undef my $querystring;
    undef my $constraints;

    my $mask = 0;
    foreach my $item (split /\D+/,$contigmask) {
        $mask += $item;
    }
    $mask = 1000 if !$mask;

    my $contig; # for 1 returned
    my $hashes; # for more than 1 returned
    my $error = '';
    my $ignore = 0;
    if ($contigitem == 2) {
        $constraints = $GateKeeper->lookup('querytxt');
        $error = "please define a query" if (!$constraints);
        $CONTIGS->unlink() if ($constraints =~ s/NOQT//); # for demonstration purposes        
    }
    elsif ($contigitem && $contignmbr) {
# check for specification "last"
        if ($contignmbr =~ /\blast\b\s*(\d*)/i) {
            $constraints = "order by contig_id desc";
            $limit = $1 || 1; # overrides input 'maxrows'
        }
        elsif ($contignmbr !~ /\,|\-|\./) {
            $contig = $creader->getContigHashById($contignmbr,0,1);
# store return value in array hashes to conform to other branches
            my @hashes; $hashes = \@hashes;
            push @hashes,$contig;
            $ignore = 1;
        }
        elsif ($contignmbr =~ /\,/) {
            $constraints = "contig_id in ($contignmbr)";
        }  
        else {
            my ($first,$last) = split /[\s\,\.\:\-]+/,$contignmbr;
            $constraints = "(contig_id >= $first and contig_id <= $last)";
        }
    }
    elsif ($contigitem && !$contignmbr) {
        $error = "please provide a Contig Number";
    }
    elsif (!$contigname) {
        $error = "please provide a Contig Name or other identifier";
    }
    else {
        $page->patience(4);
        $contigname .= "\%" if ($wildcard == 1);
        $contigname = "\%$contigname\%" if ($wildcard == 2);
        $mask = sprintf("%04d",$mask) if (length($mask) < 4);
        my %options = (mask => "$mask", returnIds => 1, limit => $limit);
        $hashes = $creader->findContigByAlias($contigname,\%options);
        my $long = 0; 
        $long = 1 if (ref($hashes) eq 'ARRAY' && @$hashes == 1);
        $hashes = $creader->getContigHashById($hashes,0,$long);
        $ignore = 1;
    }

    if (!$error && !$ignore) {
# search on constraints using findContigByQuery
        $constraints .= " limit $limit" if $limit;
        if ($hashes = $creader->findContigByQuery($constraints)) {
# returns always an array; replace each array element by the corresponding contig hash
            my $long = 0; 
            $long = 1 if (ref($hashes) eq 'ARRAY' && @$hashes == 1);
            $hashes = $creader->getContigHashById($hashes,0,$long);
        }
        else {
            $error = "Invalid query : $CONTIGS->{qerror}";
        }
    }

# get header

    my $number = 0;
    if (!$error) {
        $number = @$hashes;
        $error = "No contigs found" if !$number;
    }
    $page->frameborder(100,5,'white',10);
    $page->partition(2);
    $page->sectionheader("ARCTURUS assembly tracking database query on $database.CONTIGS"); 
    $page->partition(1);
    $page->sectionheader("$number RESULTS",4,0) if ($number != 1);
      
    if ($error) {
        $page->errorbox($error);
    } 
    elsif ($number == 1) {
        $page->add($creader->listContigHash($hashes->[0]),0,0);
    } 
    else {
# compose selection table
        my $table = "<TABLE CELLPADDING=1 BORDER=1>";
        $table .= "<TR><TH>contig_id</TH><TH>contigname</TH><TH>alias</TH><TH>gen</TH>";
        $table .= "<TH>reads</TH><TH>length</TH><TH>cover</TH></TR>";
        foreach my $contighash (@$hashes) {
            my $contig_id  = $contighash->{contig_id};
            my $anchor  =  "$arc_cgi_dir/query/selectcontig";
            $anchor .= "\?database=$database\&contigitem=1\&contignmbr=$contig_id";
            $table .= "<TR><TD><A href=\"$anchor\" bgcolor=\"lightblue\">$contig_id</A></TD>";
            $table .= "<TD>$contighash->{contigname}</TD>";
            $table .= "<TD>$contighash->{aliasname}</TD>";
            $table .= "<TD align=right>$contighash->{generation}</TD>";
            $table .= "<TD>$contighash->{nreads}</TD>";
            $table .= "<TD>$contighash->{length}</TD>";
            $table .= "<TD>$contighash->{cover}</TD>";
            $table .= "</TR>";
        }
        $table .= "</TABLE>";
        $page->add($table,0,0);
    }
}

elsif ($action eq "listpending") {
$cgi->PrintVariables(1);
}

# list a selected table entry using htmlEditRecord in listing mode

elsif ($action eq "listentry") {

    my ($database,$name) = split /\./,$tablename;
    my $dbtable = $organisms->spawn($name,$database,0);
    $dbtable->compressSeed('ACGTN ') if ($name =~ /TAGS/);
#    $dbtable->autoVivify() if ($name eq 'READS');

    $page->frameborder(100,25,'white',10);
    $page->partition(2);
    $page->sectionheader("ARCTURUS assembly tracking database \"$database\"",3,0);
    $page->partition(1);

    my $column = $GateKeeper->lookup('column');
    my $cvalue = $GateKeeper->lookup('value');
    $page->sectionheader("$name entry for $column = $cvalue",4,0);

    my $mask = '1'; #default
    $mask = '11101111'      if ($tablename =~ /STSTAG/);
    $mask = '01111111101011' if ($tablename =~ /USERS/); 
    my $list = $dbtable->htmlListRecord($cvalue,$column,0,$mask);
    $page->add($list,0,0);

#    my $link = "$arc_cgi_dir/query/overview\?database=$database";
}

 
else {
    print "Invalid option $action<br>\n";
}
 
$page->form(0);
$page->flush();
$GateKeeper->disconnect;
exit 0;

##############################################################################

sub READS_form {

    my $SM = "<small>"; my $sm = "</small>";

    my $queryform = "<H4>Specify either a name or search string or a Read number";
    $queryform .= "or define selection constraints as in: 'select reads where &lt constraints &gt'</H4>";
    $queryform .= "<TABLE><TR>";
    $queryform .= "<TD align=left width=20><INPUT type='radio' name='readitem' value='0' checked></TD>";
    $queryform .=  "<TD>${SM}READ NAME$sm : </TD>";
    $queryform .=  "<TD COLSPAN=7>${SM}<INPUT type='textfield' name='readname' value='' width=24>$sm</TD>";
    $queryform .= "</TR><TR>";
    $queryform .= "<TD>&nbsp</TD><TH>type of match :</TH>";
    $queryform .= "<TD><INPUT type='radio' name='wildcard' value='0'></TD>";
    $queryform .= "<TD> exact </TD>";
    $queryform .= "<TD><INPUT type='radio' name='wildcard' value='1' checked></TD>";
    $queryform .= "<TD> begin </TD>";
    $queryform .= "<TD><INPUT type='radio' name='wildcard' value='2'></TD>";
    $queryform .= "<TD> substring </TD>";
    $queryform .= "</TR><TR>";
    $queryform .= "<TD align=left width=20><INPUT type='radio' name='readitem' value='1'></TD>";
    $queryform .= "<TD>${SM}NUMBER$sm</TD>";
    $queryform .= "<TD COLSPAN=7>${SM}<INPUT name='readnmbr' value='' width=24>$sm</TD>";
    $queryform .= "</TR><TD>&nbsp</TD><TR>";
    $queryform .= "</TR><TR>";
    $queryform .= "<TD align=left width=20><INPUT type='radio' name='readitem' value='2'></TD>";
    $queryform .= "<TD>${SM}CONSTRAINTS$sm</TD>";
    $queryform .= "<TD COLSPAN=7>${SM}<INPUT type='textfield' name='querytxt' value='' width=24 maxlength=64>$sm</TD>";
    $queryform .= "</TR><TR>";
    $queryform .= "</TR></TABLE>";

    return $queryform;
}

##############################################################################

sub CONTIGS_form {

    my $SM = "<small>"; my $sm = "</small>";

    my $queryform = "<H4>Specify either a name or search string or a Contig number ";
    $queryform .= "or define selection constraints as in: 'select contigs where &lt constraints &gt'</H4>";
    $queryform .= "<TABLE><TR>";
    $queryform .= "<TD align=left width=20><INPUT type='radio' name='contigitem' value='0' checked></TD>";
    $queryform .=  "<TD>${SM}NAME$sm </TD>";
    $queryform .=  "<TD COLSPAN=7>${SM}<INPUT type='textfield' name='contigname' value='' width=24>$sm</TD>";
    $queryform .= "</TR><TR>";
    $queryform .= "<TD>&nbsp</TD><TH align=left>search in </TH>";
    $queryform .= "<TD><INPUT type='checkbox' name='searchitem' value='1000' checked></TD>";
    $queryform .= "<TD> contigs </TD>";
    $queryform .= "<TD><INPUT type='checkbox' name='searchitem' value='0100'></TD>";
    $queryform .= "<TD> reads </TD>";
    $queryform .= "<TD><INPUT type='checkbox' name='searchitem' value='0010'></TD>";
    $queryform .= "<TD> clone </TD>";
    $queryform .= "<TD><INPUT type='checkbox' name='searchitem' value='0001'></TD>";
    $queryform .= "<TD> tags </TD>";
    $queryform .= "</TR><TR>";
    $queryform .= "<TD>&nbsp</TD><TH align=left>type of match </TH>";
    $queryform .= "<TD><INPUT type='radio' name='wildcard' value='0' checked></TD>";
    $queryform .= "<TD> exact </TD>";
    $queryform .= "<TD><INPUT type='radio' name='wildcard' value='1'></TD>";
    $queryform .= "<TD> begin </TD>";
    $queryform .= "<TD><INPUT type='radio' name='wildcard' value='2'></TD>";
    $queryform .= "<TD> substring </TD>";
    $queryform .= "</TR><TR>";
    $queryform .= "<TD align=left width=20><INPUT type='radio' name='contigitem' value='1'></TD>";
    $queryform .= "<TD>${SM}NUMBER$sm</TD>";
    $queryform .= "<TD COLSPAN=7>${SM}<INPUT name='contignmbr' value='' width=24>$sm</TD>";
    $queryform .= "</TR><TD>&nbsp</TD><TR>";
    $queryform .= "</TR><TR>";
    $queryform .= "<TD align=left width=20><INPUT type='radio' name='contigitem' value='2'></TD>";
    $queryform .= "<TD>${SM}CONSTRAINTS$sm</TD>";
    $queryform .= "<TD COLSPAN=7>${SM}<INPUT type='textfield' name='querytxt' value='' width=24 maxlength=64>$sm</TD>";
    $queryform .= "</TR><TR>";
    $queryform .= "</TR></TABLE>";

    return $queryform;
}
