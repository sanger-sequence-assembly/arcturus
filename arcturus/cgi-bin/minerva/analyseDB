#!/usr/local/bin/perl

use WrapMySQL;
use CGI;

$cgi = new CGI;

print $cgi->header();

print $cgi->start_html(-title => 'Database Analyser',
		       -bgcolor => '#FFFFFF');

print $cgi->h1('Database Analyser');

$scriptname = $cgi->script_name;

$debug = $cgi->param('debug');
$instance = $cgi->param('instance');

unless (defined($instance)) {
    @allinstances = ('babel.prod', 'babel.dev', 'babel.test',
		     'pcs3.prod',  'pcs3.dev',  'pcs3.test');

    print "Please select the instance that you wish to analyse:\n";
    print "<UL>\n";

    foreach $instance (@allinstances) {
	print "<LI><A HREF=\"$scriptname?instance=$instance\">$instance</A>\n";
    }

    print "</UL>\n";

    print $cgi->end_html;

    exit(0);
}

$database = $cgi->param('database');
$table = $cgi->param('table');

if (defined($database)) {
    push @databases, $database;
} else {
    $alldatabases = 1;
    $database = 'arcturus';
}

$dbh = WrapMySQL->connect($instance, 'read');

&db_die("Unable to connect to instance $instance") unless $dbh;

if(defined($database) && defined($table)) {
    $query = "USE $database";
    $dbh->do($query);
    if ($DBI::err) {
	print "UNABLE TO USE $database: $DBI::errstr</TD>\n</TR>\n";
    } else {
	print $cgi->h2("Table description for $database.$table on instance $instance");
	
	$query = "DESCRIBE $table";

	$sth = $dbh->prepare($query);
	&db_die("prepare($query) failed");

	$sth->execute();
	&db_die("execute($query) failed");

	@colnames = @{$sth->{NAME}};

	print "<TABLE BORDER=3 CELLPADDING=2 WIDTH=\"100%\">\n";

	print "<TR BGCOLOR=\"#FFCC00\">\n";

	foreach $hdr (@colnames) {
	    print "<TH ALIGN=\"LEFT\">$hdr</TH>\n";
	}

	print "</TR>\n";

	while (@ary = $sth->fetchrow_array()) {
	    print "<TR>\n";
	    foreach $item (@ary) {
		print "<TD>", ((defined($item) && $item ne "") ? $item : "&nbsp;"), "</TD>\n";
	    }
	    print "</TR>\n";
	}

	$sth->finish();

	print "</TABLE>\n";

	print $cgi->h2("Table status for $database.$table on instance $instance");

	$query = "SHOW TABLE STATUS LIKE '$table'";

	$sth = $dbh->prepare($query);
	&db_die("prepare($query) failed");

	$sth->execute();
	&db_die("execute($query) failed");

	@values = $sth->fetchrow_array();

	@colnames = @{$sth->{NAME}};

	print "<TABLE BORDER=3 CELLPADDING=2 WIDTH=\"100%\">\n";

	while ($colname = shift @colnames) {
	    $colvalue = shift @values;

	    $colvalue = "&nbsp;" if (!defined($colvalue) || $colvalue =~ /^\s*$/);

	    print "<TR", ($colname eq 'Name' ? ' BGCOLOR="#FFCC00"' : ''), ">";
	    print "\n<TD><STRONG>$colname</STRONG></TD>\n";
	    print "<TD>$colvalue</TD></TR>\n";
	}

	$sth->finish();

	print "</TABLE>\n";
    }
} else {
    if ($alldatabases) {
	$query = 'SHOW DATABASES';

	$sth = $dbh->prepare($query);
	&db_die("prepare($query) failed");

	$sth->execute();
	&db_die("execute($query) failed");

	@databases = ();

	while (@ary = $sth->fetchrow_array()) {
	    ($database, $junk) = @ary;
	    push @databases, $database;
	    print STDERR "# DATABASE $database\n" if $debug;
	}

	$sth->finish();
	&db_die("finish($query) failed");
    }

    print "<TABLE BORDER=3 CELLPADDING=2 WIDTH=\"100%\">\n";

    foreach $database (sort @databases) {
	$scriptlink = "$scriptname?instance=$instance&database=$database";
	$query = "USE $database";
	$dbh->do($query);
	if ($DBI::err) {
	    print "<TR>\n  <TD COLSPAN=2 BGCOLOR=\"#FF0000\" ALIGN=\"LEFT\">";
	    print "UNABLE TO USE $database: $DBI::errstr</TD>\n</TR>\n";
	    next;
	} else {
	    print "<TR>\n  <TD COLSPAN=2 BGCOLOR=\"#FFCC00\" ALIGN=\"LEFT\">";
	    print "<A HREF=\"$scriptlink\"><STRONG>$database</STRONG></A></TD>\n</TR>\n";
	}

	$query = 'SHOW TABLES';

	print STDERR "# QUERY $query\n" if $debug;

	$sth = $dbh->prepare($query);
	&db_die("prepare($query) failed");

	$sth->execute();
	&db_die("execute($query) failed");

	@alltables = ();

	while (@ary = $sth->fetchrow_array()) {
	    ($tablename, $junk) = @ary;
	    push @alltables, $tablename;
	    print STDERR "# TABLE $tablename\n" if $debug;
	}

	$sth->finish();
	&db_die("finish($query) failed");

	foreach $tablename (@alltables) {
	    $query = 'SELECT COUNT(*) FROM ' . $tablename;

	    $sth = $dbh->prepare($query);
	    &db_die("prepare($query) failed");

	    $sth->execute();
	    &db_die("execute($query) failed");

	    while (@ary = $sth->fetchrow_array()) {
		($rowcount, $junk) = @ary;
		$scriptlink = "$scriptname?instance=$instance&database=$database&table=$tablename";
		printf "<TR>\n<TD>";
		print "<A HREF=\"$scriptlink\">$tablename</A></TD><TD>$rowcount</TD>\n</TR>\n";
	    }
	    
	    $sth->finish();
	    &db_die("finish($query) failed");
	}
    }

    print "</TABLE>\n";
}

$dbh->disconnect();

print $cgi->end_html;

exit(0);

sub db_die {
    my $msg = shift;
    return unless $DBI::err;
    print STDERR "MySQL error: $msg: $DBI::err ($DBI::errstr)\n\n";
    exit(0);
}
