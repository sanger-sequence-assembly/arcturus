#!/usr/local/bin/perl -w

#############################################################################
#
# Create ARCTURUS Assembly Database (for organism or common)
#
#############################################################################

use strict; # Constraint variables declaration before using them

use GateKeeper; 
use DbaseTable;
use MyHTML;

##############################################################################
# unbuffered output
##############################################################################

open(STDERR,">&STDOUT") || die "Can't dump to STDOUT: $!\n";
select(STDERR); $| = 1; # Make unbuffered.
select(STDOUT); $| = 1; # Make unbuffered.

##############################################################################
# get configuration data, open CGI and MySQL Database
##############################################################################

my $GateKeeper = GateKeeper->new('mysql',0,'Insist on CGI');

my $config     = $GateKeeper->configHandle();

my $cgi        = $GateKeeper->cgiHandle();

my ($void,$option,$action) = split ('/',$GateKeeper->origin);

my $dbh        = $GateKeeper->dbHandle('arcturus');

$GateKeeper->cgiHeader(1); # return string plain

##############################################################################
# MAIN
##############################################################################


my $USERSUPPORT = $config->get("USERSUPPORT");
my $db_manager  = $config->get("db_manager");      
my $SCRATCH_DIR = "/nfs/team81/ejz/arcturus/tmp";
my $arc_cgi_dir = $config->get("ARC_CGI_DIR");

###############################################################################

my $page = MyHTML->new("ARCTURUS user information maintenance and updates");
$page->address('ejz@sanger.ac.uk','Ed Zuiderwijk',2);
$page->frameborder(100,25);
$page->center(1);

my $getMenu = "$arc_cgi_dir/update/arcturus/getmenu";

my $people = DbaseTable->new($dbh,'USERS','arcturus',1);
$option = 'abort' if !$people;

undef my $email;
undef my $report;
undef my $message;

###############################################################################

if ($option eq "register") {
# straightaway; test for presence of this username
    my $userid = $cgi->parameter('userid');
    my $passwd = $cgi->parameter('password');
    my $repeat = $cgi->parameter('pwrepeat');
    $email  = $cgi->parameter('email');
    $page->sectionheader("ARCTURUS user administration",3,1);

    if (!$userid) {
    # the user is missing
        $page->errorbox("<h3>! missing username</h3>");
        $page->add("Please use the \"Back\" button and choose a username",1,1);
    } 
    elsif ($people->associate('hashref',$userid,'userid')) {
    # the user allready exists
        $page->errorbox("<h3>! username $userid already exists</h3>");
        $page->add("Please use the \"Back\" button and choose a different username",1,1);
    }
    elsif ($userid =~ /yeast|group|team/i) {
    # the userid may not be yeastpub, yeastie, group9 etc
        $page->errorbox("<h3>! username $userid is prohibited</h3>");
        $page->add("Please use the \"Back\" button and choose a different username",1,1);
    }
    elsif (!defined($passwd) || !defined($repeat) || $passwd ne $repeat) {
        $page->errorbox("<h3>! You didn't type your password the same both times</h3>");
        $page->add("<h3>Please use the \"Back\" button and try again</h3>",1,1);
    }
    elsif (length($passwd) < 4 || $passwd =~ /\s/) {
        $page->errorbox("<h3>! Your password should have at least 4 characters and may not contain blanks</h3>");
        $page->add("<h3>Please use the \"Back\" button and try again</h3>",1,1);
    }
    elsif ($email && (my $hash = $people->associate('hashref',$email,'email'))) {
        my $other = $hash->{'userid'};
        $page->errorbox("<h3>! User $other has the same email address</h3>");
        $page->add("<h3>Please use your previously registered username</h3>",1,1);
    }
    else {
    # check the presence of all items (except authority)
        my $errorstatus;
        my $items = $people->{'columns'};
        foreach my $item (@$items) {
            my $input = $cgi->parameter($item);
            if (!defined($input) || !$input || $input =~ /\-\-/ || !($input =~ /\w/)) {
                if ($item ne 'user' &&  $item ne 'priviledges') {
                    $errorstatus .= "! item $item is not defined or has invalid characters<br>";
                }
            }
        }
        if (defined($errorstatus)) {
            $page->errorbox("<h3>$errorstatus</h3>");
            $page->add("Please use the \"Back\" button and try again",1,1);
#$page->add($cgi->PrintVariables());
        }
        else {
    # no errors detected: enter new user
            my $status = 0;
            $passwd = $cgi->ShortEncrypt($passwd,$userid);
            $status++ if (!$people->newrow('userid',$userid,'priviledges',0));
            $status++ if (!$people->update('password',$passwd));
            foreach my $item (@$items) {
                if ($item ne 'userid' && $item ne 'password' && $item ne 'user' && $item ne 'priviledges') {
                    $status++  if (!$people->update($item, $cgi->parameter($item)));
                }
            }
            if ($status) {
                $page->errorbox("<h3>Sorry!, couldn't update ARCTURUS database</h3>");
                $page->add("<b>Please inform $USERSUPPORT</b>",1,1);
            }
            else {
                $page->add("You have successfully registered as an ARCTURUS user:",1,1);
                $page->add($people->htmlEditRecord($userid,'userid',0,'0111111100'),1,1);
                $page->add("Your username and password will be sent to your mail address for reference");
		$page->add("<p>User information can be modified with the UPDATE option of the ");
	        $page->add("ARCTURUS main menu",1,1);
    # compose the mail message to the user
                $message  = "subject : ARCTURUS user administration\n\n";
                $message .= "You have registered successfully as an ARCTURUS user ";
                $message .= "with:\n\n username:  $userid \n\n password:  $repeat\n\n";
                $message .= "Keep this message for future reference\n";
    # compose a message to the database manager
                $report  = "subject : confirmation of mail to $email\n\n";
                $report .= "Concerns : new ARCTURUS user $userid has registered\n\n";
            }
        }
    }
}

###############################################################################

elsif ($option eq "modify") {
# requires priviledge level 2, or of the user him/her self
    undef my $error;
    my $link = "$arc_cgi_dir/umanager/modify";
    if (!$action || $action eq 'getform') {
    # throw back a form to select userid to modify and own userid + password
        $page->form("$arc_cgi_dir/umanager/modify/getdata");
        $page->sectionheader("ARCTURUS user administration",3,1);
        $page->sectionheader("Modify User Information",4,1);
        my $dbusers = $people->htmlOptions('userid','userid',0,0,'myself');
        $page->identify('10'); # prompt for username and password
        $page->hline();
        my $query = "<TABLE><TR><TH>User whose information needs updating:</th>";
        $query .= "<td>$dbusers</td></tr></table>";
        $page->add("$query",0,1);
        $page->submitbuttonbar($getMenu,0,0);
    }
    elsif ($action eq 'getdata') {
    # get the relevant data from the database and throw back an edit form
        my $userid   = $cgi->parameter('userid');
        my $identify = $cgi->parameter('identify');
        my $password = $cgi->parameter('password');
        $userid = $identify if ($userid eq 'myself' && $identify);
        $page->sectionheader("ARCTURUS user administration",3,0);
        $page->sectionheader("Modify User Information for user: $userid",4,1);
    # get encrypted password for user $identify
        my $hash = $people->associate('hashref',$identify,'userid');
    # test input and values
        if ($cgi->{'und_error'}) {
            $error = "Please define all input fields";
        } 
        elsif (!defined($hash) || !$hash) {
            $error = "Unknown user: $identify";
        }
        elsif ($cgi->VerifyEncrypt($password,$hash->{'password'})) {
    # password checked okay, get list of items to be edited
            $page->form("$arc_cgi_dir/umanager/modify/confirm");
            my $editlist = $people->htmlEditRecord($userid,'userid',0,'00222222000');
        # get current value of user's function
            my $function = $people->associate('function',$userid,'userid');
            $function =~ s/\s+/\\s\+/; # replace blanks by "space"
            $editlist =~ s/(\>\s*$function)/SELECTED$1/;
            $page->add($editlist,0,1);
            $page->submitbuttonbar($getMenu,0,0);
            $page->hidden('userid',$userid);
            $page->hidden('identify',$identify);
            $page->hidden('passwd',$password);
        }
        else {
            $error = "Invalid password provided for user $identify";
        }       

    } 
    elsif ($action eq 'confirm') {

        my $userid   = $cgi->parameter('userid');   # of the data to be modified
        my $identify = $cgi->parameter('identify'); # the user who is doing it
        my $passwd   = $cgi->parameter('passwd');   # his password
        my $confirm  = $cgi->parameter('confirm');
        my $cgihash  = $cgi->{cgi_input};

        $confirm = 0 if (!defined($confirm) || $confirm ne 'CONFIRM');

        $page->sectionheader("ARCTURUS user administration",3,0);
        $page->sectionheader("Modify User Information for user: $userid",4,1);

        my $dtahash = $people->associate('hashref',$identify,'userid');
        my $priviledge = &authorize($dtahash->{priviledges},1);
        if (!$cgi->VerifyEncrypt($passwd,$dtahash->{'password'})) {
    # something seriously wrong: password mismatch
            $error = "Invalid or corrupted password for user $identify";
        }
        elsif ($identify ne $userid && $priviledge < 2) {
            $error = "User $identify has no priviledges for this operation"; 
        }
        elsif (!$confirm) {
    # tally the changes and return a list of changes to confirm
            my ($changes,$report) = $people->cgiEditTable($cgihash,0);
            if ($changes > 0) {
                my $action = "$arc_cgi_dir/umanager/modify/confirm";
                $page->promptbox($report,$action,$link); # return button to modify
                $cgi->delete('submit');
                $page->ingestCGI($cgi);
                $page->form(0);
            }
            else {
                $error = "No changes specified for user $userid";
            }
        } 
        elsif ($confirm eq "CONFIRM") {
    # do the changes and return a list of changes made
            my ($changes,$report) = $people->cgiEditTable($cgihash,1);
            if ($changes > 0) {
                $people->build(1); # rebuild the table to get latest data in $people
                $link = "$arc_cgi_dir/update/arcturus/getmenu";
                $page->messagebox($report,0,1);
                $page->linkbutton('CONTINUE',$link);
            }
            else {
                $error = "No changes made!<BR> $report";
            }
        }
# $page->add($cgi->PrintVariables());
    }
    $page->errorbox("<h3>$error</h3>",$link,'RETURN') if ($error);
}

###############################################################################

elsif ($option eq "pwupdate") {
# requires priviledge level 3, or of the user him/her self
    undef my $error;
    my $link = "$arc_cgi_dir/umanager/modify";
    if (!$action || $action eq 'getform') {
    # throw back a form to select userid to modify and own userid + password
        $page->form("$arc_cgi_dir/umanager/pwupdate/getdata");
        $page->sectionheader("ARCTURUS user administration",3,0);
        $page->sectionheader("Modify User Password",4,0);
        $page->sectionheader("Enter your User ID and Password",4,1);
        my $dbusers = $people->htmlOptions('userid','userid',0,0,'myself');
        $page->identify('10'); # prompt for username and password
        $page->hline();
        my $query = "<TABLE><TR><TH>User whose password needs updating:</th>";
        $query .= "<td>$dbusers</td></tr></table>";
        $page->add("$query",0,1);
        $page->submitbuttonbar(0);

    }
    elsif ($action eq 'getdata') {
    # get the relevant data from the database and throw back an edit form
        my $userid   = $cgi->parameter('userid');
        my $identify = $cgi->parameter('identify');
        my $password = $cgi->parameter('password');
        $userid = $identify if ($userid eq 'myself' && $password);
        $page->sectionheader("ARCTURUS user administration",3,0);
        $page->sectionheader("Modify User Password for $userid",4,0);
    # get encrypted password for user $identify
        my $hash = $people->associate('hashref',$identify,'userid');
        my $accept = 0;
        if ($cgi->{'und_error'}) {
            $error = "Please define every input field";
        } 
        elsif (!defined($hash) || !$hash) {
            $error = "Unknown user: $identify";
        } 
        else {
    # test password
            if ($cgi->VerifyEncrypt($password,$hash->{'password'})) {
                $accept = 2;
        # special case to be used after build of ARCTURUS from scratch
            }
            elsif ($userid eq 'oper' && $identify eq 'oper' &&
                $hash->{'password'} eq 'update' && $password eq 'update') {
                $accept = 1;
            }
            else {
                $error = "Invalid password provided for user $identify";
            }
        }
    # if the password is found to be okay, generate form to enter new password for user
        if ($accept) {
    # password checked okay, get list of items to be edited
            $page->form("$arc_cgi_dir/umanager/pwupdate/confirm");
            $page->sectionheader("Enter new password for user $userid and repeat",4,1);
            $page->identify('01'); $page->hline(); # prompt for password and repeat
            $page->hidden('userid',$userid);
            $page->hidden('identify',$identify);
            $page->hidden('password',$password);
            $page->submitbuttonbar(0,0);
        }
    }
    else {
    # read the user data, the new password and repeat and the authorizing user 
        my $userid   = $cgi->parameter('userid');   # the target user
        my $password = $cgi->parameter('PASSWORD'); # the new password for userid
        my $repeat   = $cgi->parameter('pwrepeat'); # its repeat
        my $identify = $cgi->parameter('identify'); # ID of the authorizing user
        my $passwd   = $cgi->parameter('password'); # the password of authorizing user
        $page->sectionheader("ARCTURUS user administration",3,0);
        $page->sectionheader("Redefine User Password for $userid",4,1);
    # get 
        my $hash = $people->associate('hashref',$identify,'userid');
        my $priviledge = &authorize ($hash->{'priviledges'},2); # of authorizating user
        $hash = $people->associate('hashref',$userid,'userid'); # of the target user

        if ($identify ne $userid && $priviledge < 200) {
            $error = "User $identify has no priviledge for this operation";
        }
        elsif (!defined($password) || !defined($repeat) || $password ne $repeat) {
            $page->errorbox("You didn't type the password the same both times");
            $page->add("<h3>Please use the \"Back\" button and try again</h3>",1,1);
        }
        elsif (length($password) < 4 || $password =~ /\s/) {
            $page->errorbox("The password should have at least 4 characters and may not contain blanks");
            $page->add("<h3>Please use the \"Back\" button and try again</h3>",1,1);
        }
        elsif ($userid eq $identify && $cgi->VerifyEncrypt($password,$hash->{'password'})) {
            $page->errorbox("Please provide a password different from your previous one");
            $page->add("<h3>Please use the \"Back\" button and try again</h3>",1,1);
        }
        elsif ($cgi->VerifyEncrypt($password,$hash->{'password'})) {
            $page->warningbox("The new password is not different from the current one"); 
            $page->add("<h3>Please use the \"Back\" button and try again</h3>",1,1);
        }
        else {
    # okay, encrypt password and enter into database
            $password = $cgi->ShortEncrypt ($password,$userid);
            if (!$people->update('password',$password,'userid',$userid)) {
                $page->errorbox("Sorry!, couldn't update ARCTURUS database");
                $page->add("<b>Please inform $USERSUPPORT</b>",1,1); 
            } 
            else {
                $page->add("<h3>DONE!</H3>",0,1);
                $link = "$arc_cgi_dir/update/arcturus/getmenu";
                $page->linkbutton("CONTINUE",$link,0);
            }
        }
    }
    $page->errorbox("<h3>$error</h3>",$link,'RETURN') if ($error);
    $page->add($cgi->PrintVariables());
}

###############################################################################

elsif ($option eq "delete") {
# requires priviledge level 3
    undef my $error;
    my $link = "$arc_cgi_dir/umanager/delete";
    if (!$action || $action eq 'getform') {
    # throw back a form to select userid to modify and own userid + password
        $page->form("$arc_cgi_dir/umanager/delete/confirm");
        $page->sectionheader("ARCTURUS user administration",3,0);
        $page->sectionheader("Delete or Retire a user",4,0);
        $page->sectionheader("This function requires supervisor access priviledge",4,1);
        my $text = "A user can be deleted only if no allocation to a project ";
        $text .= "exists;<br>otherwise the user will be retired.<br>";
        $text .= "A deleted user will be removed from the database;<br> a retired ";
        $text .= "user's information will be retained<br>";
        $page->messagebox($text);
        $page->sectionheader("Enter your User ID and Password",4,0);
        my $dbusers = $people->htmlOptions('userid','userid',0,0);
        $page->identify('10'); # prompt for username and password
        $page->hline();
        my $query = "<TABLE><TR><TH>User to be deleted:</th>";
        $query .= "<td>$dbusers</td></tr></table>";
        $page->add("$query",0,1);
        $page->submitbuttonbar(0);
    }
    elsif ($action eq "confirm") {
    # test input user names and priviledges
        my $userid   = $cgi->parameter('userid');
        my $identify = $cgi->parameter('identify');
        my $password = $cgi->parameter('password');
        my $confirm  = $cgi->parameter('confirm',0); # no check for presence
        $page->form("$arc_cgi_dir/umanager/delete/confirm");
        $page->sectionheader("ARCTURUS user administration",3,0);
        $page->sectionheader("Delete or Retire user $userid",4,1);
        my $hash = $people->associate('hashref',$identify,'userid');
        my $priviledge = &authorize($hash->{'priviledges'},3);
        if ($cgi->{'und_error'}) {
            $error = "Please define every input field";
        }
        elsif (!defined($hash) || !$hash) {
            $error = "Unknown user: $identify";
        }
        elsif ($userid eq $identify) {
            $error = "You can't delete yourself!";
        }
        elsif ($confirm && $confirm eq 'CONFIRM' && $priviledge < 300) {
            $error = "User $identify has no priviledges for this operation"; 
        }
        elsif (!$cgi->VerifyEncrypt($password,$hash->{'password'})) {
            $error = "Invalid password provided for user $identify";
        }
        else {
    # check userid against projects via USERS2PROJECTS
            my $reject = "$arc_cgi_dir/update/arcturus/getmenu";
            my $action = "$arc_cgi_dir/umanager";
            my $organisms = DbaseTable->new($dbh,'ORGANISMS','arcturus',1);
            my $isAllocated = 0;
        # search all databases for a reference to this user; exit on first found
            foreach my $hash (@{$organisms->{hashrefs}}) {
                my $database = $hash->{dbasename};
                my $ptop = $organisms->new($dbh,'USERS2PROJECTS',$database,0);
                last if ($isAllocated = $ptop->associate('project',$userid,'userid'));
            }

	    if ($isAllocated) {
        # the user cannot be deleted
                my $text = "User $userid is allocated to projects<p>";
                $text   .= "User $userid will be retired"; 
                $page->hidden('function','Retired');
                $cgi->transpose('password','passwd');
                $page->ingestCGI($cgi);
                $action .= "/modify/confirm";      
                $page->promptbox($text,$action,$reject);
            }
            else {
        # delete the user
                my $text = "User $userid will be removed from the database";
                if (!$confirm || $confirm ne 'CONFIRM') {
                    undef $action;
                    $page->ingestCGI($cgi);
#                    $cgi->transport($page);     
                    $page->promptbox($text,$action,$reject);
                } 
                else {
                    if ($people->delete('userid',$userid)) {
                        $text .= " ...... DONE!"; 
                    } else {
                        $text .= " ...... FAILED!";
                    }
		    $page->messagebox($text,$reject);
                }
            }
        }
    }
    else {
        $error = "! Invalid function for \"DELETE\"";
        $page->add($cgi->PrintVariables());
    }
    $page->errorbox("<h3>$error</h3>",$link,'RETURN') if ($error);
}

###############################################################################

elsif ($option eq "locate") {
# find a user from a bit of information
    my $userid;
    $page->sectionheader("ARCTURUS user administration",3,0);
    if (!$action || $action eq 'getform') {
    # generate query form
        $page->form("$arc_cgi_dir/umanager/locate/search");
        $page->sectionheader("Find a user: formulate your query",4,1);
    # get the query form
        $page->add($people->htmlEditRecord(0,0,0,'22222220','any'),0,1);
        my $match = "<TABLE><TR><TH>matching method:</TH>";
        $match .= "<TD><INPUT TYPE=radio NAME=match VALUE=0></TD>";
        $match .= "<TD>Exact</TD><TD>&nbsp</TD>";
        $match .= "<TD><INPUT TYPE=radio NAME=match VALUE=1></TD>";
        $match .= "<TD>Substring</TD><TD>&nbsp</TD>";
        $match .= "<TD><INPUT TYPE=radio NAME=match VALUE=2 checked></TD>";
        $match .= "<TD>Substring NC</TD><TD>&nbsp</TD>";
        $match .= "</TR></TABLE>";
        $page->add($match,0,1);
        $page->submitbuttonbar(1);     
    }
    elsif ($action eq 'search') {
    # do the query, list the results
        $page->sectionheader("Find a user: results",4,1);
    # build the query
        my $input = $cgi->{'cgi_input'}; # the hash with item-value pairs
        my $match = $cgi->parameter('match');
        if (my $users = $people->find($input,'*',$match)) {
            if (@$users == 1) {
                $userid = $$users[0]->{'userid'};
                $page->add($people->htmlEditRecord($userid,'userid',0,'011111110'),0,1);
            }
            else {
                my $table = "<TABLE>";
                foreach my $hash (@$users) {
                    $userid = $hash->{'userid'};
                    my $anchor = "<a href=\"$arc_cgi_dir/umanager/locate/user\?userid=$userid\">";
                    $anchor .= "$userid</A>";
                    $table .= "<TR><TD>$anchor</TD><TD>&nbsp</TD><TD>$hash->{'lastname'}</TD>";
                    $table .= "<TD>&nbsp</TD><TD>$hash->{'givennames'}</TD>";
                    $table .= "<TD>&nbsp</TD><TD>$hash->{'function'}</TD>";
                    $table .= "<TD>&nbsp</TD><TD>$hash->{'email'}</TD></TR>";
                }
                $table .= "</TABLE>";
                $page->add($table,0,1);
            }
        }
        else {
            $page->errorbox("No users found",0);
	    $page->sectionheader("Please go back and change the search parameters",4);
        }
    }
    elsif ($action eq 'user' && ($userid = $cgi->parameter('userid'))) {

        $page->sectionheader("List particulars for user $userid",4,1);
        if (my $list = $people->htmlEditRecord($userid,'userid',0,'011111110')) {
            $page->add($list,0,1);
        } 
        else {
            $page->errorbox("No such user: $userid");
        }
    }
    else {
        $page->errorbox("Invalid input for umanager/$option/$action");
        $page->add($cgi->PrintVariables());
    }
}

###############################################################################

elsif ($option eq "authorize") {
# requires priviledge level 3, or of the user him/her self

    $page->form(0);
}

###############################################################################

else {
    $page->errorbox("Invalid option '$option' for 'umanager' script");
    $page->add($cgi->PrintVariables());
    $page->form(0);
}

###############################################################################

# $organisms->historyUpdate($userid,0,2);

$page->form(0);
$page->flush();
$dbh->disconnect;

&mailnotice ($email,$message,$SCRATCH_DIR) if ($message && $email);
&mailnotice ($db_manager,$report,$SCRATCH_DIR) if ($report);

exit 0;



#******************************************************************************
# subroutines
#******************************************************************************


sub authorize {

    my ($priviledge,$level) = @_;

print "authorize: priviledge=$priviledge<br>";    
    return $priviledge;

}


sub mailnotice {

    my ($address,$message,$scratch) = @_;

# Write content to the temporary mail file

    my $user;
   ($user = $address) =~ s/(.*)\@\S*/$1/;
    my $mailfile = "$scratch/scratch$user";

    unlink($mailfile) if (-e $mailfile);

    open (MAILFILE,">$mailfile");
    print MAILFILE $message;
    close (MAILFILE);

    system("mail $address < $mailfile");

    unlink($mailfile);

    return(0);
}
