#!/usr/local/bin/perl

use DBI;

$dbhost = shift || ('babel', 'pcs3')[int(rand(2))];
$dbport = shift || (14641, 14642, 14643, 14644)[int(rand(4))];

$dsn = 'DBI:mysql:arcturus;host=' . $dbhost . ';port=' . $dbport;

print STDERR "Marmalising MYSQL server at $dbhost:$dbport\n";

$dbh = DBI->connect($dsn, 'arcturus', '***REMOVED***',
		    {PrintError => 0, RaiseError => 0});

&db_die("Unable to connect to $dsn") unless $dbh;

$query = 'SHOW DATABASES';

$sth = $dbh->prepare($query);
&db_die("prepare($query) failed on $dsn");

$sth->execute();
&db_die("execute($query) failed on $dsn");

while(@ary = $sth->fetchrow_array()) {
    ($dbname, $junk) = @ary;
    push @databases, $dbname;
}

$sth->finish();

@dblist = ();

foreach $dbname (@databases) {
    $query = "SELECT * FROM $dbname.READS WHERE 1=0";

    $sth = $dbh->prepare($query);
    &db_die("prepare($query) failed on $dsn");

    $sth->execute();
    if ($DBI::err == 1146) {
	# print "Database $dbname has no table named READS\n";
    } elsif ($DBJ::err == 0) {
	#print "Database $dbname: OK\n";
	push @dblist, $dbname;
    } else {
	&db_die("execute($query) failed on $dsn");
    }

    $sth->finish();
}

foreach $dbname (@dblist) {
    print STDERR "About to whack the READS table in database $dbname\n";

    $query = "SELECT read_id, readname, slength, sequence FROM $dbname.READS";

    $sth = $dbh->prepare($query);
    &db_die("prepare($query) failed on $dsn");

    $sth->execute();

    $totlen = 0;
    $totslen = 0;
    $nreads = 0;

    while(@ary = $sth->fetchrow_array()) {
	($readid, $readname, $readlength, $sequence) = @ary;
	$totlen += $readlength;
	$totslen += length($sequence);
	$nreads += 1;
    }

    $sth->finish();
}

$dbh->disconnect();

($utime, $stime, $cutime, $cstime) = times();

printf STDERR "All done in %.2f user, %.2f system\n", $utime, $stime;

exit(0);

sub db_die {
    my $msg = shift;
    return unless $DBI::err;
    print STDERR "MySQL error: $msg $DBI::err ($DBI::errstr)\n\n";
    exit(0);
}
